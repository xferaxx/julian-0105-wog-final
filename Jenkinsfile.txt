pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                //to check out from gitHub the project
                git branch: 'main', url: 'https://github.com/xferaxx/julian-0105-wog-final.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    bat 'cd C:\\Users\\PC\\PycharmProjects\\wog'
                    // i used the yml file to build the image
                    bat 'docker-compose build'
                    // i used this one only to run it after on port 8777
                    bat 'docker build -t jenkinsimg:0.2 .'
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    bat 'docker rm -f flask_app || true'
                    bat 'cd C:\\Users\\PC\\PycharmProjects\\wog'
                    // used the yml file to run the image
                    bat 'docker-compose up -d'
                    // i used run command just to see if it works with port 8777
                    bat 'docker run -d -p 8777:5000 --name flask_app -v C:/Users/PC/PycharmProjects/wog/Scores.txt:/app/Scores.txt jenkinsimg:0.2'
                    
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    bat 'pip install selenium'
                }
            }
        }

        stage('Wait for Service to Start') {
            steps {
                script {
                    bat 'ping -n 5 127.0.0.1 >nul' // Increase the wait time 5 sec
                }
            }
        }

        stage('Debug Docker Container') {
            steps {
                script {
                    bat 'docker ps -a'  // Check the status of all containers
                    bat 'curl http://127.0.0.1:8777'  // Check if the service is reachable
                }
            }
        }

        stage('Test Application') {
            steps {
                script {
                    bat 'python C:/Users/PC/PycharmProjects/wog/e2e.py || exit 1' // test the URL
                }
            }
        }
    }

    post {
        success {
            script {
                //i Created credentialsId in credentials using username and pass of DockerHub
                withCredentials([usernamePassword(credentialsId: '17b7ef5d-56a6-4913-890b-0453d0d676d4', passwordVariable: 'DOCKER_HUB_PASSWORD', usernameVariable: 'DOCKER_HUB_USERNAME')]) {
                    bat 'docker login -u %DOCKER_HUB_USERNAME% -p %DOCKER_HUB_PASSWORD%'
                    bat 'cd C:\\Users\\PC\\PycharmProjects\\wog'
                    bat 'docker-compose push'// i used it to push the image to DockerHub
                }
            }
        }
        always {
            script {
                echo 'Pipeline stage completed.'
                bat 'docker rm -f flask_app || true'  // Ensure the container port 8777 is removed at the end of the pipeline
                bat 'docker-compose down || true'     // Ensure the container port 5000 is removed at the end of the pipeline       
                
            }
        }
    }
}
